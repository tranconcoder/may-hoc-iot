{{!-- Trang thêm camera mới --}}

<style>
/* CSS cho trang thêm camera */
.add-camera-page {
  padding: 20px;
}

.page-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 30px;
  padding-bottom: 15px;
  border-bottom: 1px solid #e0e0e0;
}

.header-left {
  display: flex;
  align-items: center;
  gap: 15px;
}

.btn-back {
  padding: 5px;
  font-size: 14px;
  color: #007bff;
  text-decoration: none;
  display: flex;
  align-items: center;
}

.btn-back i {
  margin-right: 5px;
}

.page-title {
  font-size: 24px;
  font-weight: 600;
  margin: 0;
}

.form-container {
  background-color: #fff;
  border-radius: 10px;
  padding: 25px;
  box-shadow: 0 2px 10px rgba(0,0,0,0.05);
}

.form-section {
  margin-bottom: 30px;
}

.form-section-title {
  font-size: 18px;
  font-weight: 600;
  margin-bottom: 20px;
  padding-bottom: 10px;
  border-bottom: 1px solid #f0f0f0;
  color: #333;
}

.form-row {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: 20px;
  margin-bottom: 10px;
}

.form-group {
  margin-bottom: 20px;
}

.form-group label {
  display: block;
  font-weight: 500;
  margin-bottom: 8px;
  color: #444;
}

.form-control {
  width: 100%;
  padding: 10px 12px;
  border: 1px solid #ced4da;
  border-radius: 4px;
  font-size: 14px;
  transition: border-color 0.2s;
}

.form-control:focus {
  border-color: #80bdff;
  outline: 0;
  box-shadow: 0 0 0 0.2rem rgba(0,123,255,0.25);
}

.form-control.is-invalid {
  border-color: #dc3545;
}

.invalid-feedback {
  color: #dc3545;
  font-size: 12px;
  margin-top: 5px;
  display: none;
}

.form-control.is-invalid + .invalid-feedback {
  display: block;
}

.form-text {
  font-size: 12px;
  color: #6c757d;
  margin-top: 5px;
}

.form-check {
  display: flex;
  align-items: center;
  margin-bottom: 10px;
}

.form-check-input {
  margin-right: 10px;
}

.advanced-options-toggle {
  color: #007bff;
  background: none;
  border: none;
  font-size: 14px;
  padding: 0;
  cursor: pointer;
  display: flex;
  align-items: center;
  margin-bottom: 15px;
}

.advanced-options-toggle i {
  margin-right: 8px;
  transition: transform 0.2s;
}

.advanced-options-toggle.collapsed i {
  transform: rotate(-90deg);
}

.advanced-options {
  padding: 15px;
  background-color: #f8f9fa;
  border-radius: 5px;
  margin-bottom: 20px;
  border: 1px solid #e9ecef;
}

.camera-preview-container {
  margin-top: 30px;
  border: 1px dashed #ced4da;
  border-radius: 8px;
  padding: 20px;
  text-align: center;
  background-color: #f8f9fa;
  min-height: 300px;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

.camera-preview-placeholder {
  color: #6c757d;
  margin-bottom: 15px;
}

.camera-preview-placeholder i {
  font-size: 48px;
  margin-bottom: 15px;
  color: #adb5bd;
}

.camera-preview-image {
  max-width: 100%;
  max-height: 300px;
  display: none;
}

.btn-group {
  margin-top: 30px;
  display: flex;
  justify-content: flex-end;
  gap: 15px;
}

.btn {
  padding: 10px 20px;
  border-radius: 4px;
  font-size: 14px;
  font-weight: 500;
  cursor: pointer;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  transition: all 0.2s ease;
}

.btn i {
  margin-right: 6px;
}

.btn-primary {
  background-color: #007bff;
  color: white;
  border: 1px solid #007bff;
}

.btn-primary:hover {
  background-color: #0069d9;
  border-color: #0062cc;
}

.btn-secondary {
  background-color: #6c757d;
  color: white;
  border: 1px solid #6c757d;
}

.btn-secondary:hover {
  background-color: #5a6268;
  border-color: #545b62;
}

.btn-outline-primary {
  color: #007bff;
  background-color: transparent;
  border: 1px solid #007bff;
}

.btn-outline-primary:hover {
  color: #fff;
  background-color: #007bff;
}

/* Tabs cho loại camera */
.camera-type-tabs {
  display: flex;
  margin-bottom: 25px;
  border-bottom: 1px solid #dee2e6;
}

.camera-type-tab {
  padding: 12px 25px;
  margin-right: 5px;
  cursor: pointer;
  border: 1px solid transparent;
  border-top-left-radius: 4px;
  border-top-right-radius: 4px;
  font-weight: 500;
  position: relative;
  bottom: -1px;
}

.camera-type-tab.active {
  border-color: #dee2e6 #dee2e6 #fff;
  background-color: #fff;
  color: #007bff;
}

.camera-type-tab:hover:not(.active) {
  background-color: #f8f9fa;
}

.camera-type-content {
  display: none;
}

.camera-type-content.active {
  display: block;
}

/* Custom select styling */
.custom-select {
  position: relative;
  width: 100%;
}

.custom-select select {
  width: 100%;
  padding: 10px 12px;
  border: 1px solid #ced4da;
  border-radius: 4px;
  font-size: 14px;
  appearance: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  background-color: #fff;
}

.custom-select::after {
  content: '\f107';
  font-family: 'Font Awesome 5 Free';
  font-weight: 900;
  position: absolute;
  right: 12px;
  top: 50%;
  transform: translateY(-50%);
  pointer-events: none;
}

/* Responsive design */
@media (max-width: 768px) {
  .form-row {
    grid-template-columns: 1fr;
  }
  
  .btn-group {
    flex-direction: column;
    width: 100%;
  }
  
  .btn {
    width: 100%;
  }
}
</style>

<div class="container-fluid add-camera-page">
  <div class="page-header">
    <div class="header-left">
      <a href="/views/dashboard/cameras" class="btn-back">
        <i class="fas fa-arrow-left"></i> Quay lại danh sách camera
      </a>
      <h1 class="page-title">Thêm Camera Mới</h1>
    </div>
  </div>
  
  <div class="form-container">
    <form id="addCameraForm">
      <div class="camera-type-tabs">
        <div class="camera-type-tab active" data-tab="ip-camera">Camera IP</div>
        <div class="camera-type-tab" data-tab="rtsp-camera">Camera RTSP</div>
        <div class="camera-type-tab" data-tab="onvif-camera">Camera ONVIF</div>
      </div>
      
      <div class="camera-type-content active" id="ip-camera-content">
        <div class="form-section">
          <h2 class="form-section-title">Thông tin cơ bản</h2>
          
          <div class="form-row">
            <div class="form-group">
              <label for="cameraName">Tên camera <span class="text-danger">*</span></label>
              <input type="text" class="form-control" id="cameraName" name="cameraName" required>
              <div class="invalid-feedback">Vui lòng nhập tên camera</div>
            </div>
            
            <div class="form-group">
              <label for="cameraLocation">Vị trí <span class="text-danger">*</span></label>
              <input type="text" class="form-control" id="cameraLocation" name="cameraLocation" required>
              <div class="invalid-feedback">Vui lòng nhập vị trí camera</div>
            </div>
          </div>
          
          <div class="form-row">
            <div class="form-group">
              <label for="cameraGroup">Nhóm camera</label>
              <div class="custom-select">
                <select class="form-control" id="cameraGroup" name="cameraGroup">
                  <option value="">Chọn nhóm</option>
                  <option value="traffic">Camera giao thông</option>
                  <option value="security">Camera an ninh</option>
                  <option value="indoor">Camera trong nhà</option>
                  <option value="outdoor">Camera ngoài trời</option>
                </select>
              </div>
            </div>
            
            <div class="form-group">
              <label for="cameraStatus">Trạng thái</label>
              <div class="custom-select">
                <select class="form-control" id="cameraStatus" name="cameraStatus">
                  <option value="active">Hoạt động</option>
                  <option value="inactive">Không hoạt động</option>
                  <option value="maintenance">Bảo trì</option>
                </select>
              </div>
            </div>
          </div>
          
          <div class="form-group">
            <label for="cameraDescription">Mô tả</label>
            <textarea class="form-control" id="cameraDescription" name="cameraDescription" rows="3"></textarea>
          </div>
        </div>

        <div class="form-section">
          <h2 class="form-section-title">Thông tin kết nối</h2>
          
          <div class="form-row">
            <div class="form-group">
              <label for="cameraIpAddress">Địa chỉ IP <span class="text-danger">*</span></label>
              <input type="text" class="form-control" id="cameraIpAddress" name="cameraIpAddress" required placeholder="192.168.1.100">
              <div class="invalid-feedback">Vui lòng nhập địa chỉ IP hợp lệ</div>
            </div>
            
            <div class="form-group">
              <label for="cameraPort">Cổng HTTP</label>
              <input type="number" class="form-control" id="cameraPort" name="cameraPort" placeholder="80">
              <div class="form-text">Mặc định: 80</div>
            </div>
          </div>
          
          <div class="form-row">
            <div class="form-group">
              <label for="cameraUsername">Tên đăng nhập</label>
              <input type="text" class="form-control" id="cameraUsername" name="cameraUsername" placeholder="admin">
            </div>
            
            <div class="form-group">
              <label for="cameraPassword">Mật khẩu</label>
              <input type="password" class="form-control" id="cameraPassword" name="cameraPassword">
            </div>
          </div>
          
          <div class="form-group">
            <label for="cameraStreamUrl">URL Stream <span class="text-danger">*</span></label>
            <input type="text" class="form-control" id="cameraStreamUrl" name="cameraStreamUrl" required placeholder="http://192.168.1.100/video">
            <div class="form-text">URL để truy cập stream hình ảnh từ camera</div>
            <div class="invalid-feedback">Vui lòng nhập URL stream hợp lệ</div>
          </div>
          
          <button type="button" class="advanced-options-toggle" data-toggle="collapse" data-target="#advancedOptions">
            <i class="fas fa-caret-down"></i> Tùy chọn nâng cao
          </button>
          
          <div id="advancedOptions" class="advanced-options collapse">
            <div class="form-row">
              <div class="form-group">
                <label for="cameraProtocol">Giao thức</label>
                <div class="custom-select">
                  <select class="form-control" id="cameraProtocol" name="cameraProtocol">
                    <option value="http">HTTP</option>
                    <option value="https">HTTPS</option>
                  </select>
                </div>
              </div>
              
              <div class="form-group">
                <label for="cameraManufacturer">Nhà sản xuất</label>
                <div class="custom-select">
                  <select class="form-control" id="cameraManufacturer" name="cameraManufacturer">
                    <option value="">Chọn nhà sản xuất</option>
                    <option value="hikvision">Hikvision</option>
                    <option value="dahua">Dahua</option>
                    <option value="axis">Axis</option>
                    <option value="samsung">Samsung</option>
                    <option value="other">Khác</option>
                  </select>
                </div>
              </div>
            </div>
            
            <div class="form-row">
              <div class="form-group">
                <label for="streamFormat">Định dạng stream</label>
                <div class="custom-select">
                  <select class="form-control" id="streamFormat" name="streamFormat">
                    <option value="mjpeg">MJPEG</option>
                    <option value="h264">H.264</option>
                    <option value="h265">H.265</option>
                  </select>
                </div>
              </div>
              
              <div class="form-group">
                <label for="snapshotUrl">URL ảnh chụp</label>
                <input type="text" class="form-control" id="snapshotUrl" name="snapshotUrl" placeholder="http://192.168.1.100/snapshot">
                <div class="form-text">URL để chụp ảnh từ camera</div>
              </div>
            </div>
            
            <div class="form-group">
              <label for="cameraModel">Model camera</label>
              <input type="text" class="form-control" id="cameraModel" name="cameraModel">
            </div>
            
            <div class="form-group">
              <div class="form-check">
                <input class="form-check-input" type="checkbox" id="enablePtz" name="enablePtz">
                <label class="form-check-label" for="enablePtz">
                  Camera hỗ trợ PTZ (xoay, nghiêng, zoom)
                </label>
              </div>
            </div>
            
            <div id="ptzSettings" class="collapse">
              <div class="form-row">
                <div class="form-group">
                  <label for="ptzApiUrl">URL API điều khiển PTZ</label>
                  <input type="text" class="form-control" id="ptzApiUrl" name="ptzApiUrl">
                </div>
                
                <div class="form-group">
                  <label for="ptzProtocol">Giao thức PTZ</label>
                  <div class="custom-select">
                    <select class="form-control" id="ptzProtocol" name="ptzProtocol">
                      <option value="onvif">ONVIF</option>
                      <option value="pelco-d">Pelco-D</option>
                      <option value="pelco-p">Pelco-P</option>
                      <option value="custom">Tùy chỉnh</option>
                    </select>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
        
        <div class="form-section">
          <h2 class="form-section-title">Cấu hình phát hiện đối tượng</h2>
          
          <div class="form-group">
            <div class="form-check">
              <input class="form-check-input" type="checkbox" id="enableObjectDetection" name="enableObjectDetection">
              <label class="form-check-label" for="enableObjectDetection">
                Bật tính năng phát hiện đối tượng
              </label>
            </div>
          </div>
          
          <div id="objectDetectionSettings" class="collapse">
            <div class="form-row">
              <div class="form-group">
                <label for="detectionThreshold">Ngưỡng phát hiện</label>
                <input type="range" class="form-range" min="0" max="1" step="0.05" value="0.5" id="detectionThreshold" name="detectionThreshold">
                <div class="range-value text-center">50%</div>
              </div>
              
              <div class="form-group">
                <label for="detectionInterval">Tần suất phát hiện (giây)</label>
                <input type="number" class="form-control" id="detectionInterval" name="detectionInterval" value="1" min="1">
              </div>
            </div>
            
            <div class="form-group">
              <label>Đối tượng phát hiện</label>
              <div class="row">
                <div class="col-6 col-md-3">
                  <div class="form-check">
                    <input class="form-check-input" type="checkbox" id="detectPeople" name="detectPeople" checked>
                    <label class="form-check-label" for="detectPeople">Người</label>
                  </div>
                </div>
                <div class="col-6 col-md-3">
                  <div class="form-check">
                    <input class="form-check-input" type="checkbox" id="detectVehicles" name="detectVehicles" checked>
                    <label class="form-check-label" for="detectVehicles">Phương tiện</label>
                  </div>
                </div>
                <div class="col-6 col-md-3">
                  <div class="form-check">
                    <input class="form-check-input" type="checkbox" id="detectFaces" name="detectFaces">
                    <label class="form-check-label" for="detectFaces">Khuôn mặt</label>
                  </div>
                </div>
                <div class="col-6 col-md-3">
                  <div class="form-check">
                    <input class="form-check-input" type="checkbox" id="detectLicensePlates" name="detectLicensePlates">
                    <label class="form-check-label" for="detectLicensePlates">Biển số xe</label>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
        
        <div class="form-section">
          <h2 class="form-section-title">Kiểm tra kết nối</h2>
          
          <button type="button" id="testConnectionBtn" class="btn btn-outline-primary">
            <i class="fas fa-plug"></i> Kiểm tra kết nối
          </button>
          
          <div class="camera-preview-container mt-4">
            <div id="previewPlaceholder" class="camera-preview-placeholder">
              <i class="fas fa-video"></i>
              <p>Nhấn "Kiểm tra kết nối" để xem hình ảnh từ camera</p>
            </div>
            <img id="cameraPreview" class="camera-preview-image" alt="Camera Preview">
            <div id="connectionStatus" class="mt-2"></div>
          </div>
        </div>
      </div>

      <div class="camera-type-content" id="rtsp-camera-content">
        <div class="form-section">
          <h2 class="form-section-title">Thông tin cơ bản</h2>
          
          <div class="form-row">
            <div class="form-group">
              <label for="rtspCameraName">Tên camera <span class="text-danger">*</span></label>
              <input type="text" class="form-control" id="rtspCameraName" name="rtspCameraName" required>
              <div class="invalid-feedback">Vui lòng nhập tên camera</div>
            </div>
            
            <div class="form-group">
              <label for="rtspCameraLocation">Vị trí <span class="text-danger">*</span></label>
              <input type="text" class="form-control" id="rtspCameraLocation" name="rtspCameraLocation" required>
              <div class="invalid-feedback">Vui lòng nhập vị trí camera</div>
            </div>
          </div>
          
          <div class="form-group">
            <label for="rtspUrl">URL RTSP <span class="text-danger">*</span></label>
            <input type="text" class="form-control" id="rtspUrl" name="rtspUrl" required placeholder="rtsp://username:password@192.168.1.100:554/stream">
            <div class="form-text">Ví dụ: rtsp://admin:password@192.168.1.100:554/stream</div>
            <div class="invalid-feedback">Vui lòng nhập URL RTSP hợp lệ</div>
          </div>
        </div>
        
        <div class="form-section">
          <h2 class="form-section-title">Xác thực (nếu không có trong URL)</h2>
          
          <div class="form-row">
            <div class="form-group">
              <label for="rtspUsername">Tên đăng nhập</label>
              <input type="text" class="form-control" id="rtspUsername" name="rtspUsername">
            </div>
            
            <div class="form-group">
              <label for="rtspPassword">Mật khẩu</label>
              <input type="password" class="form-control" id="rtspPassword" name="rtspPassword">
            </div>
          </div>
        </div>
        
        <div class="form-section">
          <h2 class="form-section-title">Kiểm tra kết nối</h2>
          
          <button type="button" id="testRtspConnectionBtn" class="btn btn-outline-primary">
            <i class="fas fa-plug"></i> Kiểm tra kết nối RTSP
          </button>
          
          <div class="camera-preview-container mt-4">
            <div id="rtspPreviewPlaceholder" class="camera-preview-placeholder">
              <i class="fas fa-video"></i>
              <p>Nhấn "Kiểm tra kết nối RTSP" để xem hình ảnh từ camera</p>
            </div>
            <img id="rtspCameraPreview" class="camera-preview-image" alt="RTSP Camera Preview">
            <div id="rtspConnectionStatus" class="mt-2"></div>
          </div>
        </div>
      </div>

      <div class="camera-type-content" id="onvif-camera-content">
        <div class="form-section">
          <h2 class="form-section-title">Thông tin ONVIF</h2>
          
          <div class="form-row">
            <div class="form-group">
              <label for="onvifCameraName">Tên camera <span class="text-danger">*</span></label>
              <input type="text" class="form-control" id="onvifCameraName" name="onvifCameraName" required>
            </div>
            
            <div class="form-group">
              <label for="onvifCameraLocation">Vị trí <span class="text-danger">*</span></label>
              <input type="text" class="form-control" id="onvifCameraLocation" name="onvifCameraLocation" required>
            </div>
          </div>
          
          <div class="form-row">
            <div class="form-group">
              <label for="onvifIpAddress">Địa chỉ IP <span class="text-danger">*</span></label>
              <input type="text" class="form-control" id="onvifIpAddress" name="onvifIpAddress" required placeholder="192.168.1.100">
            </div>
            
            <div class="form-group">
              <label for="onvifPort">Cổng ONVIF</label>
              <input type="number" class="form-control" id="onvifPort" name="onvifPort" placeholder="80">
              <div class="form-text">Mặc định: 80</div>
            </div>
          </div>
          
          <div class="form-row">
            <div class="form-group">
              <label for="onvifUsername">Tên đăng nhập</label>
              <input type="text" class="form-control" id="onvifUsername" name="onvifUsername" placeholder="admin">
            </div>
            
            <div class="form-group">
              <label for="onvifPassword">Mật khẩu</label>
              <input type="password" class="form-control" id="onvifPassword" name="onvifPassword">
            </div>
          </div>
        </div>
        
        <div class="form-section">
          <h2 class="form-section-title">Khám phá và kiểm tra</h2>
          
          <button type="button" id="discoverOnvifBtn" class="btn btn-outline-primary mb-3">
            <i class="fas fa-search"></i> Khám phá thông tin ONVIF
          </button>
          
          <div id="onvifDiscoveryResults" class="mb-3" style="display: none;">
            <h3 class="h5 mb-2">Thông tin thiết bị:</h3>
            <div class="table-responsive">
              <table class="table table-sm table-bordered">
                <tbody id="onvifDeviceInfo">
                </tbody>
              </table>
            </div>
            
            <h3 class="h5 mb-2 mt-3">Các profile sẵn có:</h3>
            <div id="onvifProfiles" class="mb-3">
            </div>
          </div>
          
          <button type="button" id="testOnvifConnectionBtn" class="btn btn-outline-primary">
            <i class="fas fa-plug"></i> Kiểm tra kết nối ONVIF
          </button>
          
          <div class="camera-preview-container mt-4">
            <div id="onvifPreviewPlaceholder" class="camera-preview-placeholder">
              <i class="fas fa-video"></i>
              <p>Nhấn "Kiểm tra kết nối ONVIF" để xem hình ảnh từ camera</p>
            </div>
            <img id="onvifCameraPreview" class="camera-preview-image" alt="ONVIF Camera Preview">
            <div id="onvifConnectionStatus" class="mt-2"></div>
          </div>
        </div>
      </div>
      
      <div class="btn-group">
        <button type="button" id="cancelBtn" class="btn btn-secondary">
          <i class="fas fa-times"></i> Hủy
        </button>
        <button type="submit" class="btn btn-primary">
          <i class="fas fa-save"></i> Lưu camera
        </button>
      </div>
    </form>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Xử lý chuyển tab loại camera
    const cameraTabs = document.querySelectorAll('.camera-type-tab');
    const cameraContents = document.querySelectorAll('.camera-type-content');
    
    cameraTabs.forEach(tab => {
      tab.addEventListener('click', function() {
        // Xóa class active từ tất cả các tab
        cameraTabs.forEach(t => t.classList.remove('active'));
        
        // Thêm class active cho tab được click
        this.classList.add('active');
        
        // Ẩn tất cả nội dung tab
        cameraContents.forEach(content => {
          content.classList.remove('active');
        });
        
        // Hiển thị nội dung tab tương ứng
        const tabId = this.getAttribute('data-tab');
        document.getElementById(tabId + '-content').classList.add('active');
      });
    });
    
    // Xử lý toggle tùy chọn nâng cao
    const advancedToggle = document.querySelector('.advanced-options-toggle');
    if (advancedToggle) {
      advancedToggle.addEventListener('click', function() {
        this.classList.toggle('collapsed');
        const advancedOptions = document.getElementById('advancedOptions');
        if (advancedOptions.classList.contains('show')) {
          advancedOptions.classList.remove('show');
        } else {
          advancedOptions.classList.add('show');
        }
      });
    }
    
    // Xử lý toggle PTZ settings
    const enablePtz = document.getElementById('enablePtz');
    if (enablePtz) {
      enablePtz.addEventListener('change', function() {
        const ptzSettings = document.getElementById('ptzSettings');
        if (this.checked) {
          ptzSettings.classList.add('show');
        } else {
          ptzSettings.classList.remove('show');
        }
      });
    }
    
    // Xử lý toggle phát hiện đối tượng
    const enableObjectDetection = document.getElementById('enableObjectDetection');
    if (enableObjectDetection) {
      enableObjectDetection.addEventListener('change', function() {
        const objectDetectionSettings = document.getElementById('objectDetectionSettings');
        if (this.checked) {
          objectDetectionSettings.classList.add('show');
        } else {
          objectDetectionSettings.classList.remove('show');
        }
      });
    }
    
    // Xử lý thanh trượt ngưỡng phát hiện
    const detectionThreshold = document.getElementById('detectionThreshold');
    if (detectionThreshold) {
      detectionThreshold.addEventListener('input', function() {
        const value = Math.round(this.value * 100);
        this.nextElementSibling.textContent = value + '%';
      });
    }
    
    // Xử lý nút kiểm tra kết nối camera IP
    const testConnectionBtn = document.getElementById('testConnectionBtn');
    if (testConnectionBtn) {
      testConnectionBtn.addEventListener('click', function() {
        const ipAddress = document.getElementById('cameraIpAddress').value;
        const streamUrl = document.getElementById('cameraStreamUrl').value;
        const username = document.getElementById('cameraUsername').value;
        const password = document.getElementById('cameraPassword').value;
        
        if (!ipAddress || !streamUrl) {
          alert('Vui lòng nhập địa chỉ IP và URL stream để kiểm tra kết nối');
          return;
        }
        
        const connectionStatus = document.getElementById('connectionStatus');
        connectionStatus.innerHTML = '<div class="alert alert-info">Đang kết nối...</div>';
        
        // Trong thực tế, bạn sẽ gửi yêu cầu API đến server để kiểm tra kết nối
        // Ở đây chúng ta giả lập kết nối thành công sau 2 giây
        setTimeout(function() {
          const previewPlaceholder = document.getElementById('previewPlaceholder');
          const cameraPreview = document.getElementById('cameraPreview');
          
          // Giả lập hiển thị hình ảnh từ camera (trong thực tế sẽ là hình ảnh thực)
          previewPlaceholder.style.display = 'none';
          cameraPreview.src = '/img/camera-preview-sample.jpg';
          cameraPreview.style.display = 'block';
          
          connectionStatus.innerHTML = '<div class="alert alert-success">Kết nối thành công!</div>';
        }, 2000);
      });
    }
    
    // Xử lý nút kiểm tra kết nối RTSP
    const testRtspConnectionBtn = document.getElementById('testRtspConnectionBtn');
    if (testRtspConnectionBtn) {
      testRtspConnectionBtn.addEventListener('click', function() {
        const rtspUrl = document.getElementById('rtspUrl').value;
        
        if (!rtspUrl) {
          alert('Vui lòng nhập URL RTSP để kiểm tra kết nối');
          return;
        }
        
        const rtspConnectionStatus = document.getElementById('rtspConnectionStatus');
        rtspConnectionStatus.innerHTML = '<div class="alert alert-info">Đang kết nối...</div>';
        
        // Trong thực tế, bạn sẽ gửi yêu cầu API đến server để kiểm tra kết nối
        // Ở đây chúng ta giả lập kết nối thành công sau 2 giây
        setTimeout(function() {
          const rtspPreviewPlaceholder = document.getElementById('rtspPreviewPlaceholder');
          const rtspCameraPreview = document.getElementById('rtspCameraPreview');
          
          rtspPreviewPlaceholder.style.display = 'none';
          rtspCameraPreview.src = '/img/camera-preview-sample.jpg';
          rtspCameraPreview.style.display = 'block';
          
          rtspConnectionStatus.innerHTML = '<div class="alert alert-success">Kết nối RTSP thành công!</div>';
        }, 2000);
      });
    }
    
    // Xử lý khám phá thông tin ONVIF
    const discoverOnvifBtn = document.getElementById('discoverOnvifBtn');
    if (discoverOnvifBtn) {
      discoverOnvifBtn.addEventListener('click', function() {
        const ipAddress = document.getElementById('onvifIpAddress').value;
        const username = document.getElementById('onvifUsername').value;
        const password = document.getElementById('onvifPassword').value;
        
        if (!ipAddress) {
          alert('Vui lòng nhập địa chỉ IP để khám phá thông tin ONVIF');
          return;
        }
        
        // Giả lập khám phá thông tin ONVIF
        setTimeout(function() {
          document.getElementById('onvifDiscoveryResults').style.display = 'block';
          
          // Điền thông tin thiết bị
          document.getElementById('onvifDeviceInfo').innerHTML = `
            <tr>
              <td><strong>Nhà sản xuất:</strong></td>
              <td>Hikvision</td>
            </tr>
            <tr>
              <td><strong>Model:</strong></td>
              <td>DS-2CD2142FWD-I</td>
            </tr>
            <tr>
              <td><strong>Firmware:</strong></td>
              <td>V5.5.53</td>
            </tr>
            <tr>
              <td><strong>Số sê-ri:</strong></td>
              <td>DS20190125AAWR</td>
            </tr>
          `;
          
          // Điền thông tin các profile
          document.getElementById('onvifProfiles').innerHTML = `
            <div class="form-check mb-2">
              <input class="form-check-input" type="radio" name="onvifProfile" id="profile1" value="Profile_1" checked>
              <label class="form-check-label" for="profile1">
                <strong>Profile 1:</strong> Main Stream - H.264 (1920x1080, 25fps)
              </label>
            </div>
            <div class="form-check mb-2">
              <input class="form-check-input" type="radio" name="onvifProfile" id="profile2" value="Profile_2">
              <label class="form-check-label" for="profile2">
                <strong>Profile 2:</strong> Sub Stream - H.264 (640x480, 15fps)
              </label>
            </div>
          `;
        }, 2000);
      });
    }
    
    // Xử lý nút kiểm tra kết nối ONVIF
    const testOnvifConnectionBtn = document.getElementById('testOnvifConnectionBtn');
    if (testOnvifConnectionBtn) {
      testOnvifConnectionBtn.addEventListener('click', function() {
        const ipAddress = document.getElementById('onvifIpAddress').value;
        const username = document.getElementById('onvifUsername').value;
        const password = document.getElementById('onvifPassword').value;
        
        if (!ipAddress) {
          alert('Vui lòng nhập địa chỉ IP để kiểm tra kết nối ONVIF');
          return;
        }
        
        const onvifConnectionStatus = document.getElementById('onvifConnectionStatus');
        onvifConnectionStatus.innerHTML = '<div class="alert alert-info">Đang kết nối ONVIF...</div>';
        
        // Giả lập kết nối ONVIF thành công sau 2 giây
        setTimeout(function() {
          const onvifPreviewPlaceholder = document.getElementById('onvifPreviewPlaceholder');
          const onvifCameraPreview = document.getElementById('onvifCameraPreview');
          
          onvifPreviewPlaceholder.style.display = 'none';
          onvifCameraPreview.src = '/img/camera-preview-sample.jpg';
          onvifCameraPreview.style.display = 'block';
          
          onvifConnectionStatus.innerHTML = '<div class="alert alert-success">Kết nối ONVIF thành công!</div>';
        }, 2000);
      });
    }
    
    // Xử lý nút hủy
    const cancelBtn = document.getElementById('cancelBtn');
    if (cancelBtn) {
      cancelBtn.addEventListener('click', function() {
        if (confirm('Bạn có chắc chắn muốn hủy thêm camera? Mọi thông tin đã nhập sẽ bị mất.')) {
          window.location.href = '/views/dashboard/cameras';
        }
      });
    }
    
    // Xử lý form submit
    const addCameraForm = document.getElementById('addCameraForm');
    if (addCameraForm) {
      addCameraForm.addEventListener('submit', function(e) {
        e.preventDefault();
        
        // Kiểm tra form hợp lệ
        let isValid = true;
        const activeTab = document.querySelector('.camera-type-tab.active').getAttribute('data-tab');
        
        if (activeTab === 'ip-camera') {
          const cameraName = document.getElementById('cameraName').value;
          const cameraLocation = document.getElementById('cameraLocation').value;
          const cameraIpAddress = document.getElementById('cameraIpAddress').value;
          const cameraStreamUrl = document.getElementById('cameraStreamUrl').value;
          
          if (!cameraName) {
            document.getElementById('cameraName').classList.add('is-invalid');
            isValid = false;
          } else {
            document.getElementById('cameraName').classList.remove('is-invalid');
          }
          
          if (!cameraLocation) {
            document.getElementById('cameraLocation').classList.add('is-invalid');
            isValid = false;
          } else {
            document.getElementById('cameraLocation').classList.remove('is-invalid');
          }
          
          if (!cameraIpAddress) {
            document.getElementById('cameraIpAddress').classList.add('is-invalid');
            isValid = false;
          } else {
            document.getElementById('cameraIpAddress').classList.remove('is-invalid');
          }
          
          if (!cameraStreamUrl) {
            document.getElementById('cameraStreamUrl').classList.add('is-invalid');
            isValid = false;
          } else {
            document.getElementById('cameraStreamUrl').classList.remove('is-invalid');
          }
        } else if (activeTab === 'rtsp-camera') {
          const rtspCameraName = document.getElementById('rtspCameraName').value;
          const rtspCameraLocation = document.getElementById('rtspCameraLocation').value;
          const rtspUrl = document.getElementById('rtspUrl').value;
          
          if (!rtspCameraName) {
            document.getElementById('rtspCameraName').classList.add('is-invalid');
            isValid = false;
          } else {
            document.getElementById('rtspCameraName').classList.remove('is-invalid');
          }
          
          if (!rtspCameraLocation) {
            document.getElementById('rtspCameraLocation').classList.add('is-invalid');
            isValid = false;
          } else {
            document.getElementById('rtspCameraLocation').classList.remove('is-invalid');
          }
          
          if (!rtspUrl) {
            document.getElementById('rtspUrl').classList.add('is-invalid');
            isValid = false;
          } else {
            document.getElementById('rtspUrl').classList.remove('is-invalid');
          }
        } else if (activeTab === 'onvif-camera') {
          const onvifCameraName = document.getElementById('onvifCameraName').value;
          const onvifCameraLocation = document.getElementById('onvifCameraLocation').value;
          const onvifIpAddress = document.getElementById('onvifIpAddress').value;
          
          if (!onvifCameraName) {
            document.getElementById('onvifCameraName').classList.add('is-invalid');
            isValid = false;
          } else {
            document.getElementById('onvifCameraName').classList.remove('is-invalid');
          }
          
          if (!onvifCameraLocation) {
            document.getElementById('onvifCameraLocation').classList.add('is-invalid');
            isValid = false;
          } else {
            document.getElementById('onvifCameraLocation').classList.remove('is-invalid');
          }
          
          if (!onvifIpAddress) {
            document.getElementById('onvifIpAddress').classList.add('is-invalid');
            isValid = false;
          } else {
            document.getElementById('onvifIpAddress').classList.remove('is-invalid');
          }
        }
        
        if (!isValid) {
          return false;
        }
        
        // Thu thập dữ liệu từ form tùy theo tab đang active
        let cameraData = {
          type: activeTab
        };
        
        if (activeTab === 'ip-camera') {
          cameraData = {
            ...cameraData,
            name: document.getElementById('cameraName').value,
            location: document.getElementById('cameraLocation').value,
            group: document.getElementById('cameraGroup').value,
            status: document.getElementById('cameraStatus').value,
            description: document.getElementById('cameraDescription').value,
            ipAddress: document.getElementById('cameraIpAddress').value,
            port: document.getElementById('cameraPort').value || '80',
            username: document.getElementById('cameraUsername').value,
            password: document.getElementById('cameraPassword').value,
            streamUrl: document.getElementById('cameraStreamUrl').value,
            protocol: document.getElementById('cameraProtocol') ? document.getElementById('cameraProtocol').value : 'http',
            manufacturer: document.getElementById('cameraManufacturer') ? document.getElementById('cameraManufacturer').value : '',
            model: document.getElementById('cameraModel') ? document.getElementById('cameraModel').value : '',
            streamFormat: document.getElementById('streamFormat') ? document.getElementById('streamFormat').value : 'h264',
            snapshotUrl: document.getElementById('snapshotUrl') ? document.getElementById('snapshotUrl').value : '',
            enablePtz: document.getElementById('enablePtz') ? document.getElementById('enablePtz').checked : false
          };
          
          if (cameraData.enablePtz) {
            cameraData.ptzApiUrl = document.getElementById('ptzApiUrl') ? document.getElementById('ptzApiUrl').value : '';
            cameraData.ptzProtocol = document.getElementById('ptzProtocol') ? document.getElementById('ptzProtocol').value : 'onvif';
          }
          
          cameraData.enableObjectDetection = document.getElementById('enableObjectDetection') ? document.getElementById('enableObjectDetection').checked : false;
          
          if (cameraData.enableObjectDetection) {
            cameraData.detectionThreshold = document.getElementById('detectionThreshold') ? document.getElementById('detectionThreshold').value : 0.5;
            cameraData.detectionInterval = document.getElementById('detectionInterval') ? document.getElementById('detectionInterval').value : 1;
            cameraData.detectObjects = {
              people: document.getElementById('detectPeople') ? document.getElementById('detectPeople').checked : true,
              vehicles: document.getElementById('detectVehicles') ? document.getElementById('detectVehicles').checked : true,
              faces: document.getElementById('detectFaces') ? document.getElementById('detectFaces').checked : false,
              licensePlates: document.getElementById('detectLicensePlates') ? document.getElementById('detectLicensePlates').checked : false
            };
          }
        } else if (activeTab === 'rtsp-camera') {
          cameraData = {
            ...cameraData,
            name: document.getElementById('rtspCameraName').value,
            location: document.getElementById('rtspCameraLocation').value,
            rtspUrl: document.getElementById('rtspUrl').value,
            username: document.getElementById('rtspUsername').value,
            password: document.getElementById('rtspPassword').value
          };
        } else if (activeTab === 'onvif-camera') {
          cameraData = {
            ...cameraData,
            name: document.getElementById('onvifCameraName').value,
            location: document.getElementById('onvifCameraLocation').value,
            ipAddress: document.getElementById('onvifIpAddress').value,
            port: document.getElementById('onvifPort').value || '80',
            username: document.getElementById('onvifUsername').value,
            password: document.getElementById('onvifPassword').value
          };
          
          // Lấy profile được chọn nếu có
          const selectedProfile = document.querySelector('input[name="onvifProfile"]:checked');
          if (selectedProfile) {
            cameraData.profile = selectedProfile.value;
          }
        }
        
        console.log('Camera data to save:', cameraData);
        
        // Gửi dữ liệu lên server
        fetch('/api/cameras', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(cameraData)
        })
        .then(response => {
          if (!response.ok) {
            throw new Error('Không thể lưu camera');
          }
          return response.json();
        })
        .then(data => {
          alert('Thêm camera thành công!');
          window.location.href = '/views/dashboard/cameras';
        })
        .catch(error => {
          alert('Lỗi: ' + error.message);
        });
      });
    }
  });
</script>
