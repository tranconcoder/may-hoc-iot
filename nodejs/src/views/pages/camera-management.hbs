{{!-- Trang quản lý camera --}}

<link rel="stylesheet" href="/public/css/camera-managment.css">

<div class="container-fluid camera-management-page">
  <div class="page-header">
    <h1 class="page-title">Quản lý Camera</h1>
    <div class="page-actions">
      <button class="btn btn-primary" id="btnAddCamera">
        <i class="fas fa-plus"></i> Thêm Camera
      </button>
      <button class="btn btn-secondary" id="btnRefreshCameras">
        <i class="fas fa-sync-alt"></i> Làm mới
      </button>
    </div>
  </div>

  <div class="camera-filter-bar">
    <div class="filter-group">
      <label for="cameraStatusFilter">Trạng thái:</label>
      <select id="cameraStatusFilter" class="form-control">
        <option value="all">Tất cả</option>
        <option value="active">Đang hoạt động</option>
        <option value="inactive">Không hoạt động</option>
        <option value="maintenance">Bảo trì</option>
      </select>
    </div>
    <div class="filter-group">
      <label for="cameraLocationFilter">Khu vực:</label>
      <select id="cameraLocationFilter" class="form-control">
        <option value="all">Tất cả khu vực</option>
        <option value="north">Khu vực Bắc</option>
        <option value="central">Khu vực Trung</option>
        <option value="south">Khu vực Nam</option>
      </select>
    </div>
    <div class="filter-group search-group">
      <input type="text" id="cameraSearchInput" class="form-control" placeholder="Tìm kiếm camera...">
      <button class="btn btn-outline-secondary" id="btnSearch">
        <i class="fas fa-search"></i>
      </button>
    </div>
  </div>

  <!-- Tab Navigation -->
  <ul class="nav nav-tabs camera-tabs mb-4" id="cameraTabList" role="tablist">
    {{#if cameras.length}}
      {{#each cameraTabs}}
        <li class="nav-item" role="presentation">
          <button class="nav-link {{#if @first}}active{{/if}}" 
                  id="tab-{{@index}}-tab" 
                  data-bs-toggle="tab" 
                  data-bs-target="#tab-{{@index}}" 
                  type="button" 
                  role="tab" 
                  aria-controls="tab-{{@index}}" 
                  aria-selected="{{#if @first}}true{{else}}false{{/if}}">
            Trang {{add @index 1}}
          </button>
        </li>
      {{/each}}
    {{else}}
      <li class="nav-item" role="presentation">
        <button class="nav-link active" id="empty-tab" data-bs-toggle="tab" data-bs-target="#empty-content" type="button" role="tab">
          Danh sách camera
        </button>
      </li>
    {{/if}}
  </ul>

  <!-- Tab Content -->
  <div class="tab-content" id="cameraTabContent">
    {{#if cameras.length}}
      {{#each cameraTabs}}
        <div class="tab-pane fade {{#if @first}}show active{{/if}}" 
             id="tab-{{@index}}" 
             role="tabpanel" 
             aria-labelledby="tab-{{@index}}-tab">
          <div class="camera-grid">
            {{#each this}}
              <div class="camera-card" data-camera-id="{{this.id}}">
                <div class="camera-preview">
                  <img src="{{this.previewUrl}}" alt="{{this.name}}" onerror="this.src='/img/camera-offline.jpg'">
                  <div class="camera-status {{this.status}}">
                    <i class="fas fa-circle"></i>
                    <span>{{this.statusText}}</span>
                  </div>
                  <div class="camera-resolution">{{this.resolution}}</div>
                </div>
                <div class="camera-info">
                  <h3 class="camera-name">{{this.name}}</h3>
                  <p class="camera-location"><i class="fas fa-map-marker-alt"></i> {{this.location}}</p>
                  <p class="camera-ip"><i class="fas fa-network-wired"></i> {{this.ipAddress}}</p>
                </div>
                <div class="camera-actions">
                  <button class="btn btn-sm btn-primary btn-view" data-id="{{this.id}}">
                    <i class="fas fa-eye"></i> Xem
                  </button>
                  <button class="btn btn-sm btn-info btn-edit" data-id="{{this.id}}">
                    <i class="fas fa-edit"></i> Sửa
                  </button>
                  <button class="btn btn-sm btn-danger btn-delete" data-id="{{this.id}}">
                    <i class="fas fa-trash"></i> Xóa
                  </button>
                </div>
              </div>
            {{/each}}
          </div>
        </div>
      {{/each}}
    {{else}}
      <div class="tab-pane fade show active" id="empty-content" role="tabpanel">
        <div class="no-cameras-found">
          <i class="fas fa-video-slash"></i>
          <p>Không có camera nào được tìm thấy</p>
          <button class="btn btn-primary" id="btnAddFirstCamera">Thêm camera đầu tiên</button>
        </div>
      </div>
    {{/if}}
  </div>
</div>

<!-- JavaScript cho tương tác trang quản lý camera -->
<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Khởi tạo các event listeners
    const btnAddCamera = document.getElementById('btnAddCamera');
    const btnAddFirstCamera = document.getElementById('btnAddFirstCamera');
    const btnSaveCamera = document.getElementById('btnSaveCamera');
    const cameraModal = document.getElementById('cameraModal');
    
    // Nút thêm camera
    if (btnAddCamera) {
      btnAddCamera.addEventListener('click', function() {
        // Chuyển hướng đến trang thêm camera
        window.location.href = '/views/cameras/add';
      });
    }
    
    // Nút thêm camera đầu tiên
    if (btnAddFirstCamera) {
      btnAddFirstCamera.addEventListener('click', function() {
        // Chuyển hướng đến trang thêm camera
        window.location.href = '/views/cameras/add';
      });
    }
    
    // Nút lưu camera - đã xóa vì không còn cần thiết khi đã chuyển sang trang add-camera riêng biệt
    
    // Xử lý nút sửa camera
    const editButtons = document.querySelectorAll('.btn-edit');
    editButtons.forEach(button => {
      button.addEventListener('click', function() {
        const cameraId = this.getAttribute('data-id');
        // Chuyển hướng đến trang sửa camera (có thể tạo route mới hoặc sử dụng route hiện có với tham số)
        window.location.href = `/views/cameras/edit/${cameraId}`;
      });
    });
    
    // Xử lý nút xóa camera
    const deleteButtons = document.querySelectorAll('.btn-delete');
    deleteButtons.forEach(button => {
      button.addEventListener('click', function() {
        if (confirm('Bạn có chắc chắn muốn xóa camera này?')) {
          const cameraId = this.getAttribute('data-id');
          
          fetch(`/api/cameras/${cameraId}`, {
            method: 'DELETE'
          })
          .then(response => {
            if (!response.ok) {
              throw new Error('Không thể xóa camera');
            }
            return response.json();
          })
          .then(() => {
            // Xóa camera khỏi giao diện hoặc làm mới trang
            const cameraCard = document.querySelector(`.camera-card[data-camera-id="${cameraId}"]`);
            if (cameraCard) {
              cameraCard.remove();
            }
            
            // Nếu không còn camera nào, hiển thị thông báo
            const remainingCameras = document.querySelectorAll('.camera-card');
            if (remainingCameras.length === 0) {
              location.reload(); // Làm mới để hiển thị thông báo "không có camera"
            }
          })
          .catch(error => {
            alert('Lỗi: ' + error.message);
          });
        }
      });
    });
    
    // Xử lý nút xem camera
    const viewButtons = document.querySelectorAll('.btn-view');
    viewButtons.forEach(button => {
      button.addEventListener('click', function() {
        const cameraId = this.getAttribute('data-id');
        // Chuyển hướng đến trang xem camera chi tiết
        window.location.href = `/views/dashboard/cameras/${cameraId}`;
      });
    });
    
    // Xử lý tìm kiếm và lọc
    const searchInput = document.getElementById('cameraSearchInput');
    const statusFilter = document.getElementById('cameraStatusFilter');
    const locationFilter = document.getElementById('cameraLocationFilter');
    
    function applyFilters() {
      const searchTerm = searchInput.value.toLowerCase();
      const statusValue = statusFilter.value;
      const locationValue = locationFilter.value;
      
      const cameras = document.querySelectorAll('.camera-card');
      
      cameras.forEach(camera => {
        const cameraName = camera.querySelector('.camera-name').textContent.toLowerCase();
        const cameraLocation = camera.querySelector('.camera-location').textContent.toLowerCase();
        const cameraStatus = camera.querySelector('.camera-status').classList.contains(statusValue);
        
        // Áp dụng bộ lọc
        let showCamera = true;
        
        // Lọc theo tên/vị trí
        if (searchTerm && !cameraName.includes(searchTerm) && !cameraLocation.includes(searchTerm)) {
          showCamera = false;
        }
        
        // Lọc theo trạng thái
        if (statusValue !== 'all' && !cameraStatus) {
          showCamera = false;
        }
        
        // Lọc theo khu vực
        if (locationValue !== 'all') {
          const locationMatch = camera.querySelector('.camera-location').textContent.toLowerCase().includes(locationValue.toLowerCase());
          if (!locationMatch) {
            showCamera = false;
          }
        }
        
        // Hiển thị hoặc ẩn camera
        camera.style.display = showCamera ? '' : 'none';
      });
    }
    
    if (searchInput) searchInput.addEventListener('input', applyFilters);
    if (statusFilter) statusFilter.addEventListener('change', applyFilters);
    if (locationFilter) locationFilter.addEventListener('change', applyFilters);
  });
</script>
